##
    Atenção: Para copiar os includes e a lib do xutest para esse projeto, é necessário 
    que o xutest esteja na pasta "../xutest". Para tanto, é necessário clonar o xutest 
    em ".."
##

$version=1.2
$arch=x64

$xutest_version=1.0

IF os == "windows"
    $so=windows
ENDIF
IF os != "windows"
    $so=linux
ENDIF

compiler=g++

IF os == "windows"
    output.file.name=foxmake.exe
ENDIF
IF os != "windows"
    output.file.name=foxmake
ENDIF

src.dir=src
test.dir=test
build.dir=build/foxmake-$(version)-$(so)-$(arch)

build.files=

$debug_bin_dir=bin/Debug
$debug_obj_dir=obj/Debug
$debug_compiler_params=-Wall -fexceptions -g -std=c++17
$debug_linker_params=

$release_bin_dir=bin/Release
$release_obj_dir=obj/Release
$release_compiler_params=-Wall -fexceptions -O2 -std=c++17
$release_linker_params=-s -static


bin.dir=$($(target)_bin_dir)
obj.dir=$($(target)_obj_dir)
compiler.params=$($(target)_compiler_params)
linker.params=$($(target)_linker_params)

lib.dirs=
include.dirs=
libs=

IF os != "windows"
    test.linker.params=-ldl -rdynamic
ENDIF

test.lib.dirs=lib/$(so)
test.include.dirs=include
test.libs=xutest

task compile noverbose;

proc archive_and_copy_xutest
    echo
    rm -r include/*.h
    rm lib/$(so)/libxutest.a
    
    IF os == "windows"
        @.\foxmake.exe archivebuildall --script=../xutest/FoxMakefile-StaticLib
    ENDIF
    IF os != "windows"
        @./foxmake archivebuildall --script=../xutest/FoxMakefile-StaticLib
    ENDIF
    
    mkdir -p lib/$(so)
    mkdir -p include

    cp -r ../xutest/src/**/*.h include
    cp ../xutest/build/xutest-$(xutest_version)-$(so)-$(arch)/libxutest.a lib/$(so)
    
    echo
endproc

task compileall before
   call archive_and_copy_xutest
endtask

task compile before
    call archive_and_copy_xutest
endtask

task finish after    

endtask